<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/** @var Mage_Page_Block_Html_Topmenu_Renderer $this */
/** @var Varien_Data_Tree_Node $menuTree */
/** @var string $childrenWrapClass */

$html = '';

$children = $menuTree->getChildren();
$parentLevel = $menuTree->getLevel();
$childLevel = is_null($parentLevel) ? 0 : $parentLevel + 1;

$counter = 1;
$childrenCount = $children->count();

$parentPositionClass = $menuTree->getPositionClass();
$itemPositionClassPrefix = $parentPositionClass ? $parentPositionClass . '-' : 'nav-';
$i=0;
foreach ($children as $child) {
    $id = str_replace('category-node-', '', $child->getId());
    $modelCategory = Mage::getModel('catalog/category')->load($id);
    if(in_array(5 , $modelCategory->getParentIds()) || $id == 5){
    $child->setLevel($childLevel);
    $child->setIsFirst($counter == 1);
    $child->setIsLast($counter == $childrenCount);
    $child->setPositionClass($itemPositionClassPrefix . $counter);

    $outermostClassCode = 'level'. $childLevel;
    $_hasChildren = ($child->hasChildren()) ? 'has-children' : '';
    
    if($childLevel==0){
      // get count item on 1 column //
      $columnCount = 3;
      if($childrenCount%3==0){
        $columnCount = ($childrenCount/3);
      }
      if($childrenCount%3!=0){
        $columnCount = ($childrenCount/3) + 1;
      }
      // ================= //
      if($i++%$columnCount == 0){
        $html .= '<li class="subcat">';
        $html .= '<ul class="level-group">';
      }
      $html .= '<li' . $this->_getRenderedMenuItemAttributes($child) . '>';
      $html .= '<a href="' . $child->getUrl() . '" class="' . $outermostClassCode . ' ' . $_hasChildren . '"><span>' . $this->escapeHtml($this->__($child->getName())) . '</span></a>';
      
    }else{
      $html .= '<li '. $this->_getRenderedMenuItemAttributes($child) .'>';
      $html .= '<a href="'. $child->getUrl() .'" class="'. $outermostClassCode .' '. $_hasChildren .'">'. $this->escapeHtml($this->__($child->getName())) .'</a>';
    }
    
  if($childLevel<1){
    if (!empty($childrenWrapClass)) {
        $html .= '<div class="'. $childrenWrapClass .'">';
    }

    $nextChildLevel = $childLevel + 1;

    if (!empty($_hasChildren)) {
        $html .= '<ul class="level'. $childLevel .'">';
        $html .= $this->render($child, $childrenWrapClass);
        $html .= '</ul>';
    }

    if (!empty($childrenWrapClass)) {
        $html .= '</div>';
    }
  }

  if($childLevel==0){
    $html .= '</li>';
    if(($i%$columnCount == 0)||($i == $childrenCount)){
      $html .= '</ul>';
      $html .= '</li>';
    }
  }else{
    $html .= '</li>';
  }
    

    $counter++;

    }
}

return $html;
